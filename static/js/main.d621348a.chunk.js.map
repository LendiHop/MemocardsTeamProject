{"version":3,"sources":["n2-features/f0-test/t2-404/Error404.module.css","n2-features/f1-auth/a2-registration/Registration.module.css","n1-main/m1-ui/Header/Header.module.css","n2-features/f0-test/t1-test/test.module.css","n2-features/f1-auth/a3-passwordRecovery/PasswordRecovery.module.css","n1-main/m1-ui/Header/Navbar/Navbar.module.css","reportWebVitals.ts","n1-main/m3-dal/api/auth-api.ts","n1-main/m2-bll/reducers/profile-reducer.ts","n1-main/m2-bll/reducers/app-reduser.ts","utils/error-utils.ts","n1-main/m2-bll/reducers/auth-reducer.ts","n1-main/m3-dal/api/packs-api.ts","n1-main/m2-bll/reducers/packs-reducer.ts","n1-main/m3-dal/api/cards-api.ts","n1-main/m2-bll/reducers/cards-reduser.ts","n1-main/m2-bll/store/redux-store.ts","n1-main/m1-ui/Header/Navbar/Navbar.tsx","n1-main/m1-ui/Header/AppBar.tsx","n1-main/m1-ui/Header/Header.tsx","n2-features/f0-test/t2-404/Error404.tsx","n2-features/f1-auth/a3-passwordRecovery/PasswordRecovery.tsx","n2-features/f1-auth/a4-enterPassword/NewPassword.tsx","n2-features/f1-auth/a4-enterPassword/NewPasswordContainer.tsx","n2-features/f1-auth/a5-profile/Profile.tsx","n2-features/f0-test/t1-test/common/c1-SuperInputText/SuperInputText.tsx","n2-features/f0-test/t1-test/common/c2-SuperButton/SuperButton.tsx","n2-features/f0-test/t1-test/common/c3-SuperCheckbox/SuperCheckbox.tsx","n2-features/f0-test/t1-test/test.tsx","n1-main/m1-ui/Main/Main.tsx","n2-features/f1-auth/a2-registration/Registration.tsx","n2-features/f1-auth/a2-registration/RegistrationContainer.tsx","n2-features/f1-auth/a1-loginization/Login.tsx","n2-features/f1-auth/a1-loginization/LoginContainer.tsx","n2-features/f1-auth/a3-passwordRecovery/CheckOnEmail.tsx","n2-features/f2-packsList/p4-sidebar/DoubleSlider.tsx","n2-features/f2-packsList/p4-sidebar/Sidebar.tsx","n2-features/f2-packsList/p3-tables/PacksTable.tsx","n2-features/f2-packsList/p1-search/Search.tsx","n2-features/f2-packsList/p1-search/SearchContainer.tsx","n2-features/f2-packsList/p2-pagination/Pagination.tsx","n2-features/f2-packsList/p2-pagination/PaginationContainer.tsx","n2-features/f2-packsList/PacksList.tsx","n2-features/f2-packsList/p3-tables/CardsTable.tsx","n2-features/f2-packsList/CardsList.tsx","n1-main/m1-ui/Routes/Routes.tsx","n1-main/m1-ui/ErrorSnackbar/ErrorSnackbar.tsx","n1-main/m1-ui/App.tsx","index.tsx","n2-features/f0-test/t1-test/common/c1-SuperInputText/SuperInputText.module.css","n2-features/f1-auth/a1-loginization/Login.module.css","n2-features/f0-test/t1-test/common/c2-SuperButton/SuperButton.module.css","n2-features/f0-test/t1-test/common/c3-SuperCheckbox/SuperCheckbox.module.css","n2-features/f2-packsList/p1-search/Search.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","withCredentials","baseURL","authAPI","post","res","data","delete","email","from","message","password","token","resetPasswordToken","initialState","_id","name","avatar","publicCardPacksCount","created","Date","updated","isAdmin","verified","rememberMe","error","status","isInitialized","setAppStatusAC","type","setAppErrorAC","initializeAppTC","dispatch","a","handleServerNetworkError","e","response","console","log","showCheckEmail","isNewPassword","isRegistered","isLoggedIn","setIsLoggedIn","value","authForgotAC","isShowCheckEmailAC","authReducer","state","action","packsAPI","params","get","cardsPack","id","put","cardPacks","user_id","user_name","path","cardsCount","grade","shots","rating","__v","cardPacksTotalCount","maxCardsCount","minCardsCount","page","pageCount","getCardPacksTC","getState","min","max","cards","privatCards","profile","setPacksData","catch","alert","cardsApi","packId","card","ON_PACKS_TRUE","ON_CHANGE_PRIVATE","currentPackData","answer","question","cardsPack_id","cardsTotalCount","maxGrade","minGrade","packUserId","packsTrue","onPacksTrueAC","onChangePrivateAC","getCardsTC","cardsPackId","reducers","combineReducers","app","auth","packs","filter","p","copyState","store","createStore","composeWithDevTools","applyMiddleware","thunk","Navbar","className","s","nav","exact","to","item","activeClassName","active","useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","useDispatch","AppBar","position","style","color","backgroundColor","Toolbar","IconButton","edge","aria-label","Typography","variant","ButtonGroup","size","Button","onClick","Header","useSelector","header","Error404","container","rail","stamp","four","zero","world","forward","box","wall","PasswordRecovery","formikForgotAuth","useFormik","initialValues","validate","values","errors","test","onSubmit","resetForm","Grid","xs","zeroMinWidth","direction","justifyContent","alignItems","Paper","elevation","padding","borderRadius","width","margin","handleSubmit","FormControl","FormLabel","FormGroup","TextField","label","getFieldProps","touched","marginTop","marginLeft","Link","href","NewPassword","formik","showPass","handleClickShowPassword","height","textAlign","InputLabel","htmlFor","Input","endAdornment","Visibility","VisibilityOff","NewPasswordContainer","useState","setShowPass","useParams","length","createNewPassThunk","Container","maxHeight","Profile","profileData","logoutHandler","useCallback","src","alt","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","superInput","group","required","currentTarget","key","highlight","bar","SuperButton","red","children","finalClassName","btn","SuperCheckbox","onChangeChecked","checkbox","checked","Test","text","setText","showAlert","setChecked","column","disabled","Main","useEffect","Registration","showPass1","handleClickShowPassword1","showPass2","handleClickShowPassword2","password2","RegistrationContainer","setShowPass1","setShowPass2","Error","Login","justify","formGroup","FormControlLabel","control","Checkbox","forgot","loginBtn","singUpQ","singUp","LoginContainer","setProfileData","CheckOnEmail","valuetext","DoubleSlider","setValue","gutterBottom","Slider","event","newValue","valueLabelDisplay","aria-labelledby","getAriaValueText","Sidebar","props","alignContent","disableElevation","StyledTableCell","withStyles","head","palette","common","black","white","body","fontSize","TableCell","StyledTableRow","hover","TableRow","table","minWidth","PacksTable","addPackHandler","addNewPack","deletePackHandler","deleteCardPackTC","updatePackHandler","setState","getCardsHandler","TableContainer","component","Table","TableHead","align","TableBody","map","pack","scope","toString","slice","SearchPacks","InputBase","input","placeholder","inputProps","iconButton","Search","SearchContainer","PaginationPage","Pagination","count","PaginationContainer","PacksList","React","CardsTable","packIdForAdd","addCardHandler","postCard","deleteCardHandler","deleteCardsTC","updateCardHandler","cardId","updateCard","CardsList","packName","Routes","strict","render","Alert","ErrorSnackbar","handleClose","reason","Snackbar","open","autoHideDuration","onClose","severity","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d621348a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Error404_container__2mNhv\",\"rail\":\"Error404_rail__2w3A1\",\"stamp\":\"Error404_stamp__1koHq\",\"stampSlide\":\"Error404_stampSlide__3EEnV\",\"world\":\"Error404_world__3GPZz\",\"forward\":\"Error404_forward__B1K-D\",\"slide\":\"Error404_slide__1Cmqv\",\"box\":\"Error404_box__3cvS7\",\"roll\":\"Error404_roll__EQEyN\",\"wall\":\"Error404_wall__1KQKs\",\"zeroFour\":\"Error404_zeroFour__doOCj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"regContainer\":\"Registration_regContainer__xGp19\",\"regBox\":\"Registration_regBox__2h4BV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3wvFm\",\"container\":\"Header_container__3BxMV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"test_column__Inx0-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PasswordRecovery\":\"PasswordRecovery_PasswordRecovery__3dl7H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2m3-J\",\"item\":\"Navbar_item__2C8Vo\",\"active\":\"Navbar_active__1DkdH\"};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import axios from \"axios\";\r\nimport { ProfileDataType } from \"../../m2-bll/reducers/profile-reducer\";\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n    // baseURL: 'http://localhost:7542/2.0/',\r\n});\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.post<ProfileDataType>('auth/me').then(res => res.data)\r\n    },\r\n    login(data: LoginParamsType) {\r\n        return instance.post<ProfileDataType>('auth/login', data);\r\n    },\r\n    logout() {\r\n        return instance.delete<{info: string, error: string}>('auth/me');\r\n    },\r\n    forgot(email: string) {\r\n        return instance.post<PassResponseType>(`auth/forgot`, {email,\r\n            from: \"test-front-admin <ai73a@yandex.by>\", message:`<div style=\"background-color: lime; padding: 15px\"><a href='http://localhost:3000/#/set-new-password/$token$'>\\t\\t\\n' +\r\n        '\\tlink</a></div>` }).then(res => res.data)\r\n    },\r\n    register(email: string, password: string) {\r\n        return instance.post<RegisterResponseType>('auth/register', {email, password}).then(res => res.data)\r\n    },\r\n    setNewPass(password: string, token: string ) {\r\n        return instance.post<PassResponseType>('auth/set-new-password/',\r\n            {password, resetPasswordToken: token}).then(res => res.data)\r\n    }\r\n}\r\n\r\n\r\n\r\n//types\r\n\r\ntype PassResponseType = {\r\n    info: string\r\n    error?: string\r\n}\r\n\r\ntype RegisterResponseType = {\r\n    addedUser: any\r\n    error?: string\r\n}\r\n\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}","const initialState: ProfileDataType = {\r\n    _id: \"\",\r\n    email: \"\",\r\n    name: \"\",\r\n    avatar: \"\",\r\n    publicCardPacksCount: 0,\r\n    created: new Date(2013, 2, 1, 0, 70),\r\n    updated: new Date(2015, 2, 1, 0, 70),\r\n    isAdmin: false,\r\n    verified: false ,\r\n    rememberMe: false,\r\n    error: \"\",\r\n}\r\n\r\nexport const profileReducer = (state: ProfileDataType = initialState, action: ActionsType): ProfileDataType => {\r\n    switch (action.type) {\r\n        case 'profile/SET-PROFILE-DATA':\r\n            return {...state, ...action.data}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actions\r\n\r\nexport const setProfileData = (data: ProfileDataType) =>\r\n    ({type: 'profile/SET-PROFILE-DATA', data} as const)\r\n\r\n//types\r\n\r\nexport type ProfileDataType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number // количество колод\r\n    created: Date\r\n    updated: Date\r\n    isAdmin: boolean\r\n    verified: boolean // подтвердил ли почту\r\n    rememberMe: boolean\r\n    error?: string\r\n}\r\n\r\ntype ActionsType = ReturnType<typeof setProfileData>","import {Dispatch} from \"redux\"\r\nimport {authAPI} from \"../../m3-dal/api/auth-api\";\r\nimport {handleServerNetworkError} from \"../../../utils/error-utils\";\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\nconst initialState = {\r\n    status: 'succeeded' as RequestStatusType,\r\n    error: null as string | null,\r\n    isInitialized: false\r\n}\r\n\r\nexport type AppInitialStateType = typeof initialState\r\n\r\nexport const appReducer = (state: AppInitialStateType = initialState, action: AppActionsType): AppInitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET-STATUS':\r\n            return {...state, status: action.status}\r\n        case 'APP/SET-ERROR':\r\n            return {...state, error: action.error}\r\n\r\n        case \"APP/SET-IS-INITIALIZED\":\r\n            return {...state, isInitialized: action.isInitialized}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({type: 'APP/SET-STATUS', status} as const)\r\nexport const setAppErrorAC = (error: string | null) => ({type: 'APP/SET-ERROR', error} as const)\r\nexport const setIsInitializedAC  = (isInitialized: boolean) => ({type: 'APP/SET-IS-INITIALIZED', isInitialized} as const)\r\n\r\n\r\nexport const initializeAppTC = () => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setAppStatusAC('loading'))\r\n        const res = await authAPI.me()\r\n\r\n            dispatch(setIsInitializedAC(true))\r\n\r\n            dispatch(setAppStatusAC('succeeded'))\r\n\r\n    } catch (e) {\r\n\r\n        handleServerNetworkError(e, dispatch)\r\n    }\r\n}\r\n\r\nexport type SetAppStatusActionType = ReturnType<typeof setAppStatusAC>\r\nexport type SetAppErrorActionType = ReturnType<typeof setAppErrorAC>\r\nexport type SetIsInitializedAC = ReturnType<typeof setIsInitializedAC>\r\n\r\nexport type AppActionsType = SetAppStatusActionType | SetAppErrorActionType | SetIsInitializedAC\r\n\r\n\r\n","\r\nimport { Dispatch } from 'redux';\r\nimport {setAppErrorAC, SetAppErrorActionType, setAppStatusAC, SetAppStatusActionType} from \"../n1-main/m2-bll/reducers/app-reduser\";\r\n\r\n\r\n// generic function\r\n// export const handleServerAppError = <T>(data: ResponseType<T>, dispatch: ErrorUtilsDispatchType) => {\r\n//     if (data.messages.length) {\r\n//         dispatch(setAppErrorAC(data.messages[0]))\r\n//     } else {\r\n//         dispatch(setAppErrorAC('Some error occurred'))\r\n//     }\r\n//     dispatch(setAppStatusAC('failed'))\r\n// }\r\n\r\nexport const handleServerNetworkError = (e: any, dispatch: ErrorUtilsDispatchType) => {\r\n    const error = e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n    console.log(error)\r\n    dispatch(setAppErrorAC(error))\r\n    dispatch(setAppStatusAC('failed'))\r\n}\r\n\r\nexport type ErrorUtilsDispatchType = Dispatch<SetAppErrorActionType | SetAppStatusActionType>","import { Dispatch } from \"redux\";\r\nimport {authAPI, LoginParamsType} from \"../../m3-dal/api/auth-api\";\r\nimport {setProfileData} from \"./profile-reducer\";\r\nimport {handleServerNetworkError} from \"../../../utils/error-utils\";\r\nimport {SetAppErrorActionType, setAppStatusAC, SetAppStatusActionType} from \"./app-reduser\";\r\n\r\nconst initialState: InitialStateType = {\r\n    message: '',\r\n    showCheckEmail: false,\r\n    isNewPassword: true,\r\n    isRegistered: false,\r\n    isLoggedIn: false\r\n};\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case 'login/SET-IS-LOGGED-IN':\r\n            return {...state, isLoggedIn: action.value}\r\n        case 'FORGOT-PASSWORD':\r\n            return {...state, email: action.email}\r\n        case \"AUTH/CHANGE-REGISTRATION\":\r\n            return {\r\n                ...state,\r\n                isRegistered: true\r\n            }\r\n        case \"IS-LINK-ON-EMAIL\":\r\n            return {\r\n                ...state, showCheckEmail: action.showCheckEmail\r\n            }\r\n        case \"AUTH/CREATE-NEW-PASSWORD\":\r\n            return {...state, isNewPassword: action.isNewPassword}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//actions\r\n\r\nexport const setIsLoggedIn = (value: boolean) =>\r\n    ({type: 'login/SET-IS-LOGGED-IN', value} as const)\r\n\r\nexport const onRegistrationAC = () =>\r\n    ({type: \"AUTH/CHANGE-REGISTRATION\"} as const)\r\n\r\nexport const createNewPasswordAC = (isNewPassword: boolean) =>\r\n    ({type: \"AUTH/CREATE-NEW-PASSWORD\", isNewPassword} as const)\r\n\r\nexport const authForgotAC = (email: string) =>\r\n    ({type: 'FORGOT-PASSWORD', email} as const)\r\n\r\nexport const isShowCheckEmailAC = (showCheckEmail: boolean) =>\r\n    ({type: 'IS-LINK-ON-EMAIL', showCheckEmail} as const)\r\n\r\n\r\n//thunks\r\n\r\nexport const loginTC = (data: LoginParamsType) => (dispatch: ThunkDispatch) => {\r\n    authAPI.login(data)\r\n        .then(res => {\r\n            dispatch(setIsLoggedIn(true))\r\n            dispatch(setProfileData(res.data))\r\n        })\r\n        .catch ((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            alert(error);\r\n            console.log('Error: ', {...e})\r\n        })\r\n}\r\n\r\nexport const logoutTC = () => (dispatch: ThunkDispatch) => {\r\n    authAPI.logout()\r\n        .then(() => {\r\n            dispatch(setIsLoggedIn(false))\r\n        })\r\n        .catch ((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            alert(error);\r\n            console.log('Error: ', {...e})\r\n        })\r\n}\r\n\r\nexport const onRegisterTC = (email: string, password: string) => async (dispatch: ThunkDispatch) => {\r\n    try {\r\n        dispatch(setAppStatusAC('loading'))\r\n\r\n        const data = await authAPI.register(email, password)\r\n\r\n        dispatch(onRegistrationAC())\r\n        dispatch(setAppStatusAC('succeeded'))\r\n\r\n    } catch (e) {\r\n        if (e && email === email) {\r\n            dispatch(onRegistrationAC())\r\n        }\r\n        handleServerNetworkError(e, dispatch)\r\n    }\r\n}\r\n\r\nexport const ForgotThunk = (email: string) => async (dispatch: ThunkDispatch) => {\r\n    try {\r\n        dispatch(setAppStatusAC('loading'))\r\n        const data = await authAPI.forgot(email)\r\n\r\n        dispatch(authForgotAC(email))\r\n        dispatch(isShowCheckEmailAC(true))\r\n        dispatch(setAppStatusAC('succeeded'))\r\n    }\r\n    catch(e) {\r\n        handleServerNetworkError(e, dispatch)\r\n    }\r\n}\r\n\r\nexport const createNewPassThunk = (password: string, token: string) => async (dispatch: ThunkDispatch) => {\r\n    try {\r\n        dispatch(setAppStatusAC('loading'))\r\n        const res = await authAPI.setNewPass(password, token)\r\n\r\n        dispatch(createNewPasswordAC(false))\r\n        dispatch(setAppStatusAC('succeeded'))\r\n\r\n    } catch (e) {\r\n        handleServerNetworkError(e, dispatch)\r\n    }\r\n}\r\n\r\n//types\r\ntype InitialStateType = {\r\n    message: string\r\n    showCheckEmail: boolean\r\n    isNewPassword: boolean\r\n    isRegistered: boolean\r\n    isLoggedIn: boolean\r\n}\r\n\r\ntype ActionsType = ReturnType<typeof onRegistrationAC>\r\n    | ReturnType<typeof setIsLoggedIn>\r\n    | ReturnType<typeof isShowCheckEmailAC>\r\n    | ReturnType<typeof authForgotAC>\r\n    | ReturnType<typeof createNewPasswordAC>\r\n\r\ntype ThunkDispatch = Dispatch<ActionsType | ReturnType<typeof setProfileData> | ReturnType<typeof setAppStatusAC> | SetAppErrorActionType | SetAppStatusActionType>\r\n\r\nexport default authReducer;","import {instance} from \"./auth-api\";\r\n\r\nexport const packsAPI = {\r\n    getPacks(params?: packsParamsType) {\r\n        return instance.get('cards/pack', {params}).then(res => res.data)\r\n    },\r\n    addPack(data: AddedPackType) {\r\n        return instance.post('cards/pack', {cardsPack: data}).then(res => res.data)\r\n    },\r\n    deletePack(id: string) {\r\n        return instance.delete('cards/pack', {params: {id}}).then(res => res.data)\r\n    },\r\n    updatePack(data: UpdatedPackType) {\r\n        return instance.put('cards/pack', {cardsPack: data}).then(res => res.data)\r\n    },\r\n}\r\n\r\n//types\r\n\r\nexport type UpdatedPackType = {\r\n    _id: string\r\n    name?: string\r\n    path?: string\r\n    grade?: number\r\n    shots?: number\r\n    rating?: number\r\n    deckCover?: string\r\n    private?: boolean\r\n    type?: string\r\n}\r\n\r\nexport type AddedPackType = {\r\n    name: string\r\n    path?: string\r\n    grade?: number\r\n    shots?: number\r\n    rating?: number\r\n    deckCover?: string\r\n    private?: boolean\r\n    type?: string\r\n}\r\n\r\nexport type packsParamsType = {\r\n    min?: number\r\n    max?: number\r\n    sortPacks?: number\r\n    page?: number\r\n    pageCount?: number\r\n    user_id?: string\r\n}","import {AddedPackType, packsAPI, packsParamsType, UpdatedPackType} from \"../../m3-dal/api/packs-api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {setAppStatusAC} from \"./app-reduser\";\r\nimport {AppRootStateType} from \"../store/redux-store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\n\r\nconst initialState: PacksDataType = {\r\n    cardPacks: [\r\n        {\r\n            _id: \"\",\r\n            user_id: \"\",\r\n            user_name: \"\",\r\n            name: \"\",\r\n            path: \"\",\r\n            cardsCount: 0,\r\n            grade: 0, // средняя оценка карточек\r\n            shots: 0, // количество попыток\r\n            rating: 0, // лайки\r\n            type: \"\", // ещё будет \"folder\" (папка)\r\n            created: new Date(2013, 2, 1, 0, 70),\r\n            updated: new Date(2014, 2, 1, 0, 70),\r\n            __v: 0\r\n        },\r\n    ],\r\n    cardPacksTotalCount: 0, // количество колод\r\n    maxCardsCount: 0,\r\n    minCardsCount: 0,\r\n    page: 0, // выбранная страница\r\n    pageCount: 0, // количество элементов на странице\r\n}\r\n\r\nexport const packsReducer = (state: PacksDataType = initialState, action: ActionsType): PacksDataType => {\r\n    switch (action.type) {\r\n        case 'packs/SET-PACKS-DATA':\r\n        case 'packs/ADD-NEW-PACK':\r\n        case 'packs/UPDATE-PACK':\r\n            return {...state, ...action.data}\r\n        case 'packs/DELETE-PACK':\r\n            return {...state, cardPacks: state.cardPacks.filter(p => p._id !== action.id)}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actions\r\n\r\nexport const setPacksData = (data: PacksDataType) =>\r\n    ({type: 'packs/SET-PACKS-DATA', data} as const)\r\n\r\nexport const addNewPack = (data: AddedPackType) =>\r\n    ({type: 'packs/ADD-NEW-PACK', data} as const)\r\n\r\nexport const deletePack = (id: string) =>\r\n    ({type: 'packs/DELETE-PACK', id} as const)\r\n\r\nexport const updatePack = (data: UpdatedPackType) =>\r\n    ({type: 'packs/UPDATE-PACK', data} as const)\r\n\r\n//thunks\r\n\r\nexport const getCardPacksTC = (value?: number[]): ThunkType => (dispatch, getState) => {\r\n    const state = getState()\r\n    let params: packsParamsType = {pageCount: 7}\r\n        if(value) {\r\n            params = {...params, min: value[0], max: value[1]}\r\n        }\r\n    if (state.cards.privatCards.value) {\r\n        params = {...params, user_id: state.profile._id}\r\n    }\r\n    packsAPI.getPacks(params)\r\n        .then(data => {\r\n            dispatch(setPacksData(data))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            alert(error);\r\n            console.log('Error: ', {...e})\r\n        })\r\n}\r\n\r\nexport const addCardPackTC = (data: AddedPackType): ThunkType => (dispatch) => {\r\n    packsAPI.addPack(data)\r\n        .then(data => {\r\n            dispatch(addNewPack(data))\r\n            dispatch(getCardPacksTC())\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            alert(error);\r\n            console.log('Error: ', {...e})\r\n        })\r\n}\r\n\r\nexport const deleteCardPackTC = (id: string): ThunkType => (dispatch) => {\r\n    packsAPI.deletePack(id)\r\n        .then((data) => {\r\n            // dispatch(deletePack(id))\r\n            dispatch(getCardPacksTC())\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            alert(error);\r\n            console.log('Error: ', {...e})\r\n        })\r\n}\r\n\r\nexport const updateCardPackTC = (data: UpdatedPackType): ThunkType =>\r\n    (dispatch, setState) => {\r\n   const state = setState()\r\n    const value = [state.packs.minCardsCount, state.packs.maxCardsCount]\r\n    packsAPI.updatePack(data)\r\n        .then(() => {\r\n\r\n            // dispatch(updatePack(data))\r\n            dispatch(getCardPacksTC(value))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            alert(error);\r\n            console.log('Error: ', {...e})\r\n        })\r\n}\r\n\r\n//types\r\ntype ThunkType = ThunkAction<void, AppRootStateType, unknown, ActionsType>\r\nexport type CardPackType = {\r\n    _id: string\r\n    user_id: string\r\n    user_name: string\r\n    name: string\r\n    path: string\r\n    cardsCount: number\r\n    grade: number // средняя оценка карточек\r\n    shots: number // количество попыток\r\n    rating: number // лайки\r\n    type: string // ещё будет \"folder\" (папка)\r\n    created: Date\r\n    updated: Date\r\n    __v: number\r\n}\r\n\r\ntype PacksDataType = {\r\n    cardPacks: Array<CardPackType>\r\n    cardPacksTotalCount: number // количество колод\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number // выбранная страница\r\n    pageCount: number // количество элементов на странице\r\n}\r\n\r\ntype ThunkDispatch = Dispatch<ActionsType | ReturnType<typeof setAppStatusAC>>\r\ntype ActionsType = ReturnType<typeof setPacksData>\r\n    | ReturnType<typeof addNewPack>\r\n    | ReturnType<typeof deletePack>\r\n    | ReturnType<typeof updatePack>","import { instance } from \"./auth-api\"\r\n\r\nexport const cardsApi = {\r\n    getCards(packId: string) {\r\n        return instance.get<ResponseGetCardsType>(`cards/card?cardsPack_id=${packId}`).then(res => res.data)\r\n    },\r\n    postCard(card: RequestPostCardType) {\r\n        return instance.post<{ newCard: object }>('cards/card', {card}).then(res => res.data)\r\n    },\r\n    deleteCard(id: string) {\r\n        return instance.delete(`cards/card?id=${id}`).then(res => res.data)\r\n    },\r\n    updateCard(card: RequestUpdateCard) {\r\n        return instance.put<{ updateCard: object }>('cards/card', {card}).then(res => res.data)\r\n    },\r\n}\r\n\r\n//types\r\n\r\ntype CardsTypeType = 'card' | 'pack'\r\n\r\nexport type CardType = {\r\n    answer: string\r\n    question: string\r\n    cardsPack_id: string\r\n    grade: number\r\n    rating: number\r\n    shots: number\r\n    type: CardsTypeType\r\n    user_id: string\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\nexport type ResponseGetCardsType = {\r\n    cards: Array<CardType>\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n    packUserId: string\r\n}\r\n\r\nexport type RequestPostCardType = {\r\n    answer?: string\r\n    question?: string\r\n    cardsPack_id: string\r\n    grade?: number\r\n    rating?: number\r\n    shots?: number\r\n    type?: CardsTypeType\r\n    answerImg?: string\r\n    questionImg?: string\r\n    answerVideo?: string\r\n    questionVideo?: string\r\n\r\n}\r\nexport type RequestUpdateCard = {\r\n    _id: string\r\n    question?: string // не обязательно\r\n    answer?: string\r\n    comments?: string // не обязателен\r\n\r\n}\r\n","import {Dispatch} from \"redux\"\r\nimport {\r\n    cardsApi,\r\n    CardType,\r\n    RequestPostCardType,\r\n    RequestUpdateCard,\r\n    ResponseGetCardsType\r\n} from \"../../m3-dal/api/cards-api\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppRootStateType} from \"../store/redux-store\";\r\n\r\nconst SET_CARDS = 'cards/SET-CARDS'\r\nconst ON_PACKS_TRUE = 'cards/ON_PACKS_TRUE'\r\nconst ON_CHANGE_PRIVATE = 'cards/ON-CHANGE_PRIVATE'\r\nconst ON_PRIVATE_CARDS = 'cards/ON-PRIVATE-CARDS'\r\n\r\n\r\nconst initialState = {\r\n    currentPackData: {\r\n        id: \"\",\r\n        name: \"\",\r\n    },\r\n    cards: [{\r\n        answer: '',\r\n        question: '',\r\n        cardsPack_id: '',\r\n        grade: 0,\r\n        rating: 0,\r\n        shots: 0,\r\n        type: 'card',\r\n        user_id: '',\r\n        created: '',\r\n        updated: '',\r\n        __v: 0,\r\n        _id: '',\r\n    }] as Array<CardType>,\r\n\r\n    cardsTotalCount: 0,\r\n    maxGrade: 0,\r\n    minGrade: 0,\r\n    page: 0,\r\n    pageCount: 0,\r\n    packUserId: '',\r\n    packsTrue: false,\r\n    privatCards: {value: false},\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const cardsReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"cards/SET-CARDS\":\r\n            const copyState = {...state, ...action.cards}\r\n            return copyState\r\n\r\n        case ON_PACKS_TRUE:\r\n            return {\r\n                ...state,\r\n                packsTrue: action.value\r\n            }\r\n        case ON_CHANGE_PRIVATE:\r\n            return {\r\n                ...state,\r\n                privatCards: {...state.privatCards, value: action.value}\r\n            }\r\n\r\n\r\n        case \"SET-CURRENT-PACK-ID\":\r\n            return {...state, currentPackData: action.data}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const getCardsAC = (cards: ResponseGetCardsType) => ({type: SET_CARDS, cards} as const)\r\nexport const onPacksTrueAC = (value: boolean) => ({type: ON_PACKS_TRUE, value} as const)\r\nexport const onChangePrivateAC = (value: boolean) => ({type: ON_CHANGE_PRIVATE, value} as const)\r\n\r\nexport const setCurrentPackDataAC = (data: { id: string, name: string }) => ({\r\n    type: \"SET-CURRENT-PACK-ID\",\r\n    data\r\n} as const)\r\n\r\n\r\n// thunk\r\n\r\nexport const getCardsTC = (cardsPackId: string) => async (dispatch: Dispatch) => {\r\n    try {\r\n\r\n        const data = await cardsApi.getCards(cardsPackId)\r\n        dispatch(getCardsAC(data))\r\n    } catch (e) {\r\n        console.log('e:' + e)\r\n    }\r\n}\r\nexport const postCardsTC = (cardsPackId: string): ThunkType => async (dispatch) => {\r\n    const postCard = {\r\n        cardsPack_id: cardsPackId,\r\n        answer: \"TestAnswer\",\r\n        question: \"TestQuestion\"\r\n\r\n    } as RequestPostCardType\r\n\r\n    try {\r\n        const data = await cardsApi.postCard(postCard)\r\n\r\n        await dispatch(getCardsTC(cardsPackId))\r\n    } catch (e) {\r\n        console.log('e:' + e)\r\n    }\r\n}\r\n\r\nexport const deleteCardsTC = (cardsPackId: string, id: string): ThunkType => async (dispatch) => {\r\n\r\n    try {\r\n        const data = await cardsApi.deleteCard(id)\r\n\r\n        await dispatch(getCardsTC(cardsPackId))\r\n    } catch (e) {\r\n        console.log('e:' + e)\r\n    }\r\n}\r\n\r\nexport const updateCardsTC = (cardsPackId: string, cardId: string): ThunkType => async (dispatch) => {\r\n    const updateCard = {\r\n        _id: cardId,\r\n        answer: \"-UpdatedTestAnswer-\",\r\n        question: \"-UpdatedTestQuestion-\"\r\n    } as RequestUpdateCard\r\n    try {\r\n        const data = await cardsApi.updateCard(updateCard)\r\n\r\n        await dispatch(getCardsTC(cardsPackId))\r\n    } catch (e) {\r\n        console.log('e:' + e)\r\n    }\r\n}\r\n\r\ntype ActionType = ReturnType<typeof getCardsAC>\r\n    | ReturnType<typeof onPacksTrueAC>\r\n    | ReturnType<typeof onChangePrivateAC>\r\n    | ReturnType<typeof setCurrentPackDataAC>\r\n\r\ntype ThunkType = ThunkAction<void, AppRootStateType, unknown, ActionType>","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport authReducer from \"../reducers/auth-reducer\";\r\nimport {profileReducer} from \"../reducers/profile-reducer\";\r\nimport {appReducer} from \"../reducers/app-reduser\";\r\nimport {packsReducer} from \"../reducers/packs-reducer\";\r\nimport {cardsReducer} from \"../reducers/cards-reduser\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst reducers = combineReducers({\r\n    app: appReducer,\r\n    auth: authReducer,\r\n    profile: profileReducer,\r\n    packs: packsReducer,\r\n    cards: cardsReducer\r\n});\r\n\r\nconst store = createStore(reducers, composeWithDevTools(\r\n    applyMiddleware(thunk)));\r\n\r\nexport type AppRootStateType = ReturnType<typeof reducers>\r\n\r\nexport default store;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Navbar.module.css';\r\n\r\nexport function Navbar() {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <NavLink exact to='/' className={s.item} activeClassName={s.active}>Main</NavLink>\r\n            <NavLink to='/profile' className={s.item} activeClassName={s.active}>Profile</NavLink>\r\n            <NavLink to='/packs-list' className={s.item} activeClassName={s.active}>PacksList</NavLink>\r\n            <NavLink to='/cards-list' className={s.item} activeClassName={s.active}>CardsList</NavLink>\r\n            <NavLink to='/test' className={s.item} activeClassName={s.active}>Test</NavLink>\r\n            <NavLink to='/login' className={s.item} activeClassName={s.active}>Login</NavLink>\r\n            <NavLink to='/registration' className={s.item} activeClassName={s.active}>Registration</NavLink>\r\n            <NavLink to='/password-recovery' className={s.item} activeClassName={s.active}>Password recovery</NavLink>\r\n            <NavLink to='/set-new-password' className={s.item} activeClassName={s.active}>Enter password</NavLink>\r\n        </nav>\r\n    );\r\n}","import React from 'react';\r\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport {ButtonGroup} from \"@material-ui/core\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {onPacksTrueAC} from \"../../m2-bll/reducers/cards-reduser\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n            flexGrow: 1,\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function ButtonAppBar() {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch()\r\n    const onClickPacks = () => {\r\n\r\n        dispatch(onPacksTrueAC(true))\r\n    }\r\n    const onClickProfile = () => {\r\n\r\n        dispatch(onPacksTrueAC(false))\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" style={{color: \"cadetblue\", backgroundColor: 'bisque'}}>\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        it-incubator\r\n                    </Typography>\r\n                    <ButtonGroup size=\"large\" variant=\"text\" color=\"inherit\" aria-label=\"text primary button group\">\r\n                        <Button onClick={onClickPacks}>Packs list</Button>\r\n                        <Button onClick={onClickProfile}>Profile</Button>\r\n\r\n                    </ButtonGroup>\r\n\r\n\r\n                    {/*<Button color=\"inherit\">Login</Button>*/}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {Navbar} from \"./Navbar/Navbar\";\r\nimport ButtonAppBar from \"./AppBar\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-bll/store/redux-store\";\r\n\r\nexport const Header = () => {\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n    return (\r\n        <div className={s.header}>\r\n\r\n            {isLoggedIn? <ButtonAppBar/> : <Navbar/>}\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport s from './Error404.module.css';\r\n\r\nexport const Error404 = () => {\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.rail}>\r\n                <div className={s.stamp + \" \" + s.four}>4</div>\r\n                <div className={s.stamp + \" \" + s.zero}>0</div>\r\n                <div className={s.stamp + \" \" + s.four}>4</div>\r\n                <div className={s.stamp + \" \" + s.zero}>0</div>\r\n                <div className={s.stamp + \" \" + s.four}>4</div>\r\n                <div className={s.stamp + \" \" + s.zero}>0</div>\r\n                <div className={s.stamp + \" \" + s.four}>4</div>\r\n                <div className={s.stamp + \" \" + s.zero}>0</div>\r\n                <div className={s.stamp + \" \" + s.four}>4</div>\r\n                <div className={s.stamp + \" \" + s.zero}>0</div>\r\n                <div className={s.stamp + \" \" + s.four}>4</div>\r\n                <div className={s.stamp + \" \" + s.zero}>0</div>\r\n                <div className={s.stamp + \" \" + s.four}>4</div>\r\n                <div className={s.stamp + \" \" + s.zero}>0</div>\r\n                <div className={s.stamp + \" \" + s.four}>4</div>\r\n                <div className={s.stamp + \" \" + s.zero}>0</div>\r\n                <div className={s.stamp + \" \" + s.four}>4</div>\r\n                <div className={s.stamp + \" \" + s.zero}>0</div>\r\n                <div className={s.stamp + \" \" + s.four}>4</div>\r\n                <div className={s.stamp + \" \" + s.zero}>0</div>\r\n            </div>\r\n            <div className={s.world}>\r\n                <div className={s.forward}>\r\n                    <div className={s.box}>\r\n                        <div className={s.wall}></div>\r\n                        <div className={s.wall}></div>\r\n                        <div className={s.wall}></div>\r\n                        <div className={s.wall}></div>\r\n                        <div className={s.wall}></div>\r\n                        <div className={s.wall}></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './PasswordRecovery.module.css';\r\nimport {Button, FormControl, FormGroup, FormLabel, Grid, Link, Paper, TextField, Typography} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ForgotThunk} from \"../../../n1-main/m2-bll/reducers/auth-reducer\";\r\nimport {useFormik} from \"formik\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppRootStateType} from \"../../../n1-main/m2-bll/store/redux-store\";\r\n\r\ntype FormikInitialValueType = {\r\n    email: string\r\n}\r\nexport const PasswordRecovery = () => {\r\n    const dispatch = useDispatch()\r\n    const showCheckEmail = useSelector<AppRootStateType, boolean>((state => state.auth.showCheckEmail))\r\n\r\n    const formikForgotAuth = useFormik<FormikInitialValueType>({\r\n        initialValues: {\r\n            email: ''\r\n        },\r\n        validate: (values) => {\r\n            //@ts-ignore\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: (values) => {\r\n            dispatch(ForgotThunk(values.email))\r\n            formikForgotAuth.resetForm()\r\n        },\r\n\r\n    })\r\n    if (showCheckEmail) {\r\n        return <Redirect to={'/check-on-email'}/>\r\n    }\r\n    return (\r\n        <div className=\"PasswordRecovery\">\r\n            <Grid item xs zeroMinWidth\r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\">\r\n                <Paper elevation={1} style={{\r\n                    padding: '20px',\r\n                    borderRadius: '5px',\r\n                    width: '300px',\r\n\r\n                    margin: '200px 0'\r\n                }}>\r\n                    <form onSubmit={formikForgotAuth.handleSubmit}>\r\n                        <FormControl>\r\n                            <FormLabel>\r\n                                <h1>IT-incubator</h1>\r\n                                <p>Forgot your password?</p>\r\n\r\n                            </FormLabel>\r\n                            <FormGroup>\r\n                                <TextField\r\n                                    label=\"Email\"\r\n                                    margin=\"normal\"\r\n                                    {...formikForgotAuth.getFieldProps('email')}\r\n\r\n                                />\r\n                                {formikForgotAuth.touched.email && formikForgotAuth.errors.email\r\n                                    ? <div style={{color: 'red'}}>{formikForgotAuth.errors.email}</div>\r\n                                    : null}\r\n\r\n                                <p>Enter your email address and we will send you further instructions</p>\r\n                                <div>\r\n                                    <Button type={'submit'} onClick={() => {\r\n                                    }} variant={'contained'} color={'primary'}\r\n                                            style={{\r\n                                                marginTop: '70px',\r\n                                                marginLeft: '100px',\r\n                                                borderRadius: '30px'\r\n                                            }}>Send Instructions</Button>\r\n                                </div>\r\n\r\n                                <p>Did you remember your password?</p>\r\n\r\n                                <Typography>\r\n\r\n                                    <Link href=\"#/login\" variant=\"body2\">\r\n                                        {'Try logging in'}\r\n                                    </Link>\r\n\r\n                                </Typography>\r\n\r\n                            </FormGroup>\r\n\r\n                        </FormControl>\r\n                    </form>\r\n                </Paper>\r\n            </Grid>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {FormikProps} from 'formik';\r\nimport {\r\n    Button,\r\n    FormControl,\r\n    FormGroup,\r\n    FormLabel,\r\n    Grid,\r\n    IconButton,\r\n    Input,\r\n    InputLabel,\r\n    Paper\r\n} from \"@material-ui/core\";\r\nimport {InitialValueType} from \"./NewPasswordContainer\";\r\nimport InputAdornment from '@material-ui/core/InputAdornment/InputAdornment';\r\nimport {Visibility, VisibilityOff} from \"@material-ui/icons\";\r\n\r\ntype PropsType = {\r\n    formik: FormikProps<InitialValueType>\r\n    showPass: boolean\r\n    handleClickShowPassword: () => void\r\n}\r\n\r\nexport const NewPassword: React.FC<PropsType> = ({formik, showPass, handleClickShowPassword}) => {\r\n\r\n    return (\r\n        <Grid container justifyContent={\"center\"}>\r\n            <Paper elevation={1} style={{\r\n                padding: '20px',\r\n                borderRadius: '5px',\r\n                width: '300px',\r\n                height: '400px',\r\n                margin: '200px 0'\r\n            }}>\r\n                <Grid item xs={12}>\r\n                    <form onSubmit={formik.handleSubmit} >\r\n                        <FormControl>\r\n                            <FormLabel>\r\n                                <h2 style={{textAlign: 'center'}}>Sign up</h2>\r\n                            </FormLabel>\r\n                            <FormGroup>\r\n                                {/*<TextField*/}\r\n                                {/*    type=\"password\"*/}\r\n                                {/*    label=\"Password\"*/}\r\n                                {/*    margin=\"normal\"*/}\r\n                                {/*    {...formik.getFieldProps('password')}*/}\r\n                                {/*/>*/}\r\n                                <FormControl >\r\n                                    <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\r\n                                    <Input\r\n                                        id=\"standard-adornment-password\"\r\n                                        type={showPass ? 'text' : 'password'}\r\n                                        {...formik.getFieldProps('password')}\r\n                                        endAdornment={\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton\r\n                                                    aria-label=\"toggle password visibility\"\r\n                                                    onClick={handleClickShowPassword}\r\n\r\n                                                >\r\n                                                    {showPass ? <Visibility /> : <VisibilityOff />}\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        }\r\n                                    />\r\n                                </FormControl>\r\n                                {formik.touched.password && formik.errors.password &&\r\n                                <div style={{color: 'red'}}>{formik.errors.password}</div>}\r\n                                <p>Create new password and we will send you further instructions to email</p>\r\n                                <div>\r\n                                    <Button type={'submit'} variant={'contained'} color={'primary'}\r\n                                            style={{\r\n                                                marginTop: '70px',\r\n                                                marginLeft: '100px',\r\n                                                borderRadius: '30px'\r\n                                            }}>create new password</Button>\r\n                                </div>\r\n                            </FormGroup>\r\n                        </FormControl>\r\n                    </form>\r\n                </Grid>\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n}\r\n\r\n","import React, {useState} from 'react';\r\nimport './NewPassword.module.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useFormik} from \"formik\";\r\nimport {createNewPassThunk} from \"../../../n1-main/m2-bll/reducers/auth-reducer\";\r\nimport {NewPassword} from \"./NewPassword\";\r\nimport {Container} from \"@material-ui/core\";\r\nimport {AppRootStateType} from \"../../../n1-main/m2-bll/store/redux-store\";\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\n\r\n\r\nexport const NewPasswordContainer: React.FC = () => {\r\n    const isNewPassword = useSelector<AppRootStateType, boolean>((state) => state.auth.isNewPassword)\r\n    const [showPass, setShowPass] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const {token} = useParams<{ token: string }>();\r\n    const handleClickShowPassword = () => {\r\n\r\n        const c = !showPass\r\n        setShowPass(c)\r\n    }\r\n    const formik = useFormik<InitialValueType>({\r\n\r\n        initialValues: {\r\n\r\n            password: '',\r\n\r\n        },\r\n\r\n        validate: (values) => {\r\n            //@ts-ignore\r\n            const errors: FormikErrorType = {};\r\n\r\n            if (!values.password) {\r\n                errors.password = 'Required'\r\n            } else if (values.password.length > 11) {\r\n                errors.password = 'The length of password'\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: (values) => {\r\n            dispatch(createNewPassThunk(values.password, token))\r\n            formik.resetForm()\r\n        },\r\n\r\n    })\r\n\r\n    if (!isNewPassword) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n    return (\r\n        <Container style={{maxHeight: '100%'}}>\r\n            <NewPassword formik={formik} showPass={showPass} handleClickShowPassword={handleClickShowPassword}/>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport type InitialValueType = {\r\n    password: string\r\n\r\n}","import React, {useCallback} from 'react';\r\nimport './Profile.module.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../n1-main/m2-bll/store/redux-store\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {Button} from \"@material-ui/core\";\r\nimport {ProfileDataType} from '../../../n1-main/m2-bll/reducers/profile-reducer';\r\nimport {logoutTC} from '../../../n1-main/m2-bll/reducers/auth-reducer';\r\n\r\n\r\nexport const Profile = () => {\r\n    console.log('profile')\r\n    const dispatch = useDispatch();\r\n    const profileData = useSelector<AppRootStateType, ProfileDataType>((state) => state.profile);\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn);\r\n    const packsTrue = useSelector<AppRootStateType, boolean>(state => state.cards.packsTrue);\r\n\r\n    const logoutHandler = useCallback(() => {\r\n        dispatch(logoutTC())\r\n    }, [dispatch])\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={\"/login\"}/>\r\n    } else if (packsTrue) {\r\n        return <Redirect to={'/packs-list'}/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"Profile\">\r\n            <h3>Profile</h3>\r\n            <img src={profileData.avatar} alt=\"avatar\"/>\r\n            <div>{profileData.name}</div>\r\n            <div>{isLoggedIn &&\r\n            <Button variant='contained' color='primary' onClick={logoutHandler}>Log out</Button>}</div>\r\n        </div>\r\n    );\r\n}\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperInputTextPropsType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    label?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type,\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n        label,\r\n\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange\r\n        && onChange(e)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter\r\n        && e.key === 'Enter'\r\n        && onEnter()\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName && spanClassName}`\r\n    const finalInputClassName = className ? className : s.superInput\r\n\r\n    return (\r\n        <>\r\n            <div className={s.group}>\r\n                <input type=\"text\"\r\n                       name={label && label}\r\n                       id={label && label}\r\n                       required\r\n                       onChange={onChangeCallback}\r\n                       onKeyPress={onKeyPressCallback}\r\n                       className={finalInputClassName}\r\n                       {...restProps}\r\n                />\r\n                <span className={s.highlight}></span>\r\n                <span className={s.bar}></span>\r\n                <label htmlFor={label && label} className={s.label}>{label && label}</label>\r\n                {error && <span className={finalSpanClassName}>{error}</span>}\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className, children,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red + \" \" + s.btn : s.btn} ${className}`\r\n\r\n    return (\r\n        <button className={finalClassName} {...restProps}>\r\n            <span>{children}</span>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type,\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children,\r\n\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if(onChangeChecked) onChangeChecked(e.currentTarget.checked);\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className && className}`\r\n\r\n    return (\r\n        <label className={s.label}>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps}\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './test.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nexport const Test = () => {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'Error description'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('Enter text...')\r\n        } else {\r\n            alert(text)\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    label=\"Name\"\r\n                />\r\n\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    label=\"Email\"\r\n                />\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red\r\n                    onClick={showAlert}\r\n                >\r\n                    delete\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text\r\n                </SuperCheckbox>\r\n\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}> </SuperCheckbox>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport './Main.module.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-bll/store/redux-store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {initializeAppTC} from \"../../m2-bll/reducers/app-reduser\";\r\n\r\n\r\nexport const Main = () => {\r\n    console.log('main')\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(initializeAppTC())\r\n    }, [])\r\n    const isInitialized = useSelector<AppRootStateType, boolean>(state => state.app.isInitialized)\r\n    if (isInitialized) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"Main\">\r\n            main\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport './Registration.module.css';\r\nimport {FormikProps} from 'formik';\r\nimport {\r\n    Button,\r\n    FormControl,\r\n    FormGroup,\r\n    FormLabel,\r\n    Grid,\r\n    IconButton,\r\n    Input,\r\n    InputLabel,\r\n    Paper,\r\n    TextField\r\n} from \"@material-ui/core\";\r\nimport {InitialValueType} from \"./RegistrationContainer\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment/InputAdornment\";\r\nimport {Visibility, VisibilityOff} from \"@material-ui/icons\";\r\n\r\ntype PropsType = {\r\n    formik: FormikProps<InitialValueType>\r\n    showPass1: boolean\r\n    handleClickShowPassword1: () => void\r\n    showPass2: boolean\r\n    handleClickShowPassword2: () => void\r\n}\r\n\r\nexport const Registration: React.FC<PropsType> = ({formik, showPass1, handleClickShowPassword1,\r\n                                                  showPass2, handleClickShowPassword2}) => {\r\n\r\n    return (\r\n        <Grid container justifyContent={\"center\"}>\r\n            <Paper elevation={1} style={{\r\n                padding: '20px',\r\n                borderRadius: '5px',\r\n                width: '300px',\r\n                height: '400px',\r\n                margin: '200px 0'\r\n            }}>\r\n                <Grid item xs={12}>\r\n\r\n\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <FormControl>\r\n                            <FormLabel>\r\n                                <h2 style={{textAlign: 'center'}}>Sign up</h2>\r\n                            </FormLabel>\r\n                            <FormGroup>\r\n                                <TextField\r\n                                    label=\"Email\"\r\n                                    margin=\"normal\"\r\n                                    {...formik.getFieldProps('email')}\r\n                                />\r\n                                {formik.touched.email && formik.errors.email &&\r\n                                <div style={{color: 'red'}}>{formik.errors.email}</div>}\r\n                                {/*<TextField*/}\r\n                                {/*    type=\"password\"*/}\r\n                                {/*    label=\"Password\"*/}\r\n                                {/*    margin=\"normal\"*/}\r\n                                {/*    {...formik.getFieldProps('password')}*/}\r\n                                {/*/>*/}\r\n                                <FormControl>\r\n                                    <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\r\n                                    <Input\r\n                                        id=\"standard-adornment-password\"\r\n                                        type={showPass1 ? 'text' : 'password'}\r\n                                        {...formik.getFieldProps('password')}\r\n                                        endAdornment={\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton\r\n                                                    aria-label=\"toggle password visibility\"\r\n                                                    onClick={handleClickShowPassword1}\r\n\r\n                                                >\r\n                                                    {showPass1 ? <Visibility/> : <VisibilityOff/>}\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        }\r\n                                    />\r\n                                </FormControl>\r\n                                {formik.touched.password && formik.errors.password &&\r\n                                <div style={{color: 'red'}}>{formik.errors.password}</div>}\r\n\r\n                                <FormControl>\r\n                                    <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\r\n                                    <Input\r\n                                        id=\"standard-adornment-password\"\r\n                                        type={showPass2 ? 'text' : 'password'}\r\n                                        {...formik.getFieldProps('password2')}\r\n                                        endAdornment={\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton\r\n                                                    aria-label=\"toggle password visibility\"\r\n                                                    onClick={handleClickShowPassword2}\r\n\r\n                                                >\r\n                                                    {showPass2 ? <Visibility/> : <VisibilityOff/>}\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        }\r\n                                    />\r\n                                </FormControl>\r\n\r\n                                {formik.touched.password2 && formik.errors.password2 &&\r\n                                <div style={{color: 'red'}}>{formik.errors.password2}</div>}\r\n                                <div>\r\n                                    <Button type={'reset'} onClick={() => formik.resetForm()} variant={'contained'}\r\n                                            color={'primary'}\r\n                                            style={{marginTop: '70px', borderRadius: '30px'}}>Cancel</Button>\r\n                                    <Button type={'submit'} variant={'contained'} color={'primary'}\r\n                                            style={{\r\n                                                marginTop: '70px',\r\n                                                marginLeft: '100px',\r\n                                                borderRadius: '30px'\r\n                                            }}>Register</Button>\r\n                                </div>\r\n\r\n                            </FormGroup>\r\n                        </FormControl>\r\n                    </form>\r\n\r\n                </Grid>\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n}\r\n\r\n","import React, {useState} from 'react';\r\nimport './Registration.module.css';\r\nimport {useFormik} from 'formik';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../n1-main/m2-bll/store/redux-store\";\r\nimport {onRegisterTC} from '../../../n1-main/m2-bll/reducers/auth-reducer';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Registration} from \"./Registration\";\r\nimport {Container} from \"@material-ui/core\";\r\n\r\n\r\nexport const RegistrationContainer: React.FC = () => {\r\n    const [showPass1, setShowPass1] = useState(false)\r\n    const [showPass2, setShowPass2] = useState(false)\r\n    const isRegistered = useSelector<AppRootStateType, boolean>(state => state.auth.isRegistered)\r\n    const dispatch = useDispatch()\r\n    const handleClickShowPassword1 = () => {\r\n\r\n        setShowPass1(!showPass1)\r\n    }\r\n    const handleClickShowPassword2 = () => {\r\n\r\n        setShowPass2(!showPass2)\r\n    }\r\n    const formik = useFormik<InitialValueType>({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            password2: ''\r\n        } as InitialValueType,\r\n\r\n\r\n        validate: (values) => {\r\n            //@ts-ignore\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (\r\n                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n            ) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Required'\r\n            } else if (values.password.length > 11) {\r\n                errors.password = 'The length of password'\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: (values) => {\r\n\r\n            if (values.password2 !== values.password) {\r\n                throw new Error('paas2 !== pass')\r\n            }\r\n\r\n            dispatch(onRegisterTC(values.email, values.password))\r\n            formik.resetForm()\r\n        }\r\n    })\r\n\r\n    if (isRegistered) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n    return (\r\n        <Container style={{maxHeight: '100%'}}>\r\n\r\n            <Registration formik={formik} showPass1={showPass1} handleClickShowPassword1={handleClickShowPassword1}\r\n                          showPass2={showPass2} handleClickShowPassword2={handleClickShowPassword2}/>\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport type InitialValueType = {\r\n    email: string\r\n    password: string\r\n    password2: string\r\n}\r\n","import React from 'react';\r\nimport s from './Login.module.css';\r\nimport {FormikProps} from \"formik\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormGroup,\r\n    Grid, IconButton, Input, InputLabel,\r\n    Paper,\r\n    TextField\r\n} from \"@material-ui/core\";\r\nimport {FormikLoginInitValues} from \"./LoginContainer\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment/InputAdornment\";\r\nimport {Visibility, VisibilityOff} from \"@material-ui/icons\";\r\n\r\ntype TProps = {\r\n    formik: FormikProps<FormikLoginInitValues>\r\n    showPass: boolean\r\n    handleClickShowPassword: () => void\r\n\r\n}\r\n\r\nexport const Login: React.FC<TProps> = ({formik,\r\n                                        showPass, handleClickShowPassword}) => {\r\n    console.log('login')\r\n    return <Grid container justify=\"center\" alignItems=\"center\" className={s.container}>\r\n        <Grid item>\r\n            <Paper style={{padding: '15px'}}>\r\n                <h2>Sign In</h2>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <FormControl>\r\n                        <FormGroup className={s.formGroup}>\r\n                            <TextField\r\n                                label=\"Email\"\r\n                                margin=\"normal\"\r\n                                {...formik.getFieldProps(\"email\")}\r\n                            />\r\n                            {formik.touched.email && formik.errors.email ?\r\n                                <div style={{color: \"red\"}}>{formik.errors.email}</div> : null}\r\n                            {/*<TextField*/}\r\n                            {/*    type=\"password\"*/}\r\n                            {/*    label=\"Password\"*/}\r\n                            {/*    margin=\"normal\"*/}\r\n                            {/*    {...formik.getFieldProps(\"password\")}*/}\r\n                            {/*/>*/}\r\n                            <FormControl >\r\n                                <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\r\n                                <Input\r\n                                    id=\"standard-adornment-password\"\r\n                                    type={showPass ? 'text' : 'password'}\r\n                                    {...formik.getFieldProps('password')}\r\n                                    endAdornment={\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton\r\n                                                aria-label=\"toggle password visibility\"\r\n                                                onClick={handleClickShowPassword}\r\n\r\n                                            >\r\n                                                {showPass ? <Visibility /> : <VisibilityOff />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                            {formik.touched.password && formik.errors.password ?\r\n                                <div style={{color: \"red\"}}>{formik.errors.password}</div> : null}\r\n                            <FormControlLabel\r\n                                label={'Remember me'}\r\n                                control={<Checkbox\r\n                                    {...formik.getFieldProps(\"rememberMe\")}\r\n                                    checked={formik.values.rememberMe}\r\n                                />}\r\n                            />\r\n                            <div className={s.forgot}><Link to=\"/password-recovery\">Forgot Password</Link></div>\r\n                            <Button type='submit' variant='contained' color='primary'\r\n                                    className={s.loginBtn}>Login</Button>\r\n                            <div className={s.singUpQ}><p>Don't have an account?</p></div>\r\n                            <div className={s.singUp}><Link to=\"/registration\">Sing Up</Link></div>\r\n                        </FormGroup>\r\n                    </FormControl>\r\n                </form>\r\n            </Paper>\r\n        </Grid>\r\n    </Grid>\r\n}","import React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../n1-main/m2-bll/store/redux-store\";\r\nimport {useFormik} from \"formik\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nimport { loginTC } from '../../../n1-main/m2-bll/reducers/auth-reducer';\r\nimport {Login} from \"./Login\";\r\n\r\nexport type FormikLoginInitValues = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n\r\nexport const LoginContainer: React.FC = () => {\r\n    const dispatch = useDispatch();\r\n    const [showPass, setShowPass] = useState(false)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn);\r\n    const handleClickShowPassword = () => {\r\n\r\n        const c = !showPass\r\n        setShowPass(c)\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: \"daniok2021@lendi.com\",\r\n            password: \"qwezxc123\",\r\n            rememberMe: false\r\n        } as FormikLoginInitValues,\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Email is required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Password is required';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(loginTC(values));\r\n            formik.resetForm();\r\n        },\r\n    })\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <Login formik={formik} showPass={showPass} handleClickShowPassword={handleClickShowPassword}/>\r\n}","import React from 'react'\r\nimport {Grid, Link, Paper, Typography} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../n1-main/m2-bll/store/redux-store\";\r\nimport {isShowCheckEmailAC} from \"../../../n1-main/m2-bll/reducers/auth-reducer\";\r\nimport EmailTwoToneIcon from '@material-ui/icons/EmailTwoTone';\r\n\r\nexport const CheckOnEmail: React.FC = () => {\r\n\r\n    const email = useSelector<AppRootStateType, string>((state) => state.profile.email)\r\n\r\n    const dispatch = useDispatch()\r\n    const linkCallback = () => {\r\n        dispatch(isShowCheckEmailAC(false))\r\n    }\r\n    return (\r\n        <Grid container justifyContent={\"center\"}>\r\n            <Paper elevation={1} style={{\r\n                padding: '20px',\r\n                borderRadius: '5px',\r\n                width: '300px',\r\n                height: '200px',\r\n                margin: '200px 0'\r\n            }}>\r\n                <Grid container  direction='column' justifyContent=\"center\"\r\n                      alignItems=\"center\" >\r\n                <Grid item xs={5}>\r\n\r\n                    <Typography>\r\n\r\n                        <Link href={`mailto:${email}`} onClick={linkCallback} variant=\"body2\">\r\n                            <EmailTwoToneIcon style={{margin: '0 auto'}}/>\r\n\r\n                        </Link>\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={11}>\r\n                    <div>\r\n                        {`We've sent an Email with instructions to email: ${email}`}\r\n                    </div>\r\n\r\n                </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </Grid>\r\n\r\n    )\r\n}\r\n","import {makeStyles, Slider, Typography} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 300,\r\n    },\r\n});\r\n\r\nfunction valuetext(value: number) {\r\n    return `${value}°C`;\r\n}\r\n\r\ntype PropsType = {\r\n    value: number []\r\n    setValue: Function\r\n}\r\n\r\nexport const DoubleSlider:React.FC<PropsType> = ({value, setValue}) => {\r\n    const classes = useStyles();\r\n\r\n\r\n    const handleChange = (event: any, newValue: number | number[]) => {\r\n        setValue(newValue as number[]);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography id=\"range-slider\" gutterBottom>\r\n                Number of cards\r\n            </Typography>\r\n            <Slider\r\n                style={{width: '170px'}}\r\n                value={value}\r\n                onChange={handleChange}\r\n                valueLabelDisplay=\"auto\"\r\n                aria-labelledby=\"range-slider\"\r\n                getAriaValueText={valuetext}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport {Button, ButtonGroup, Grid, Typography} from \"@material-ui/core\";\r\nimport {DoubleSlider} from \"./DoubleSlider\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {onChangePrivateAC} from \"../../../n1-main/m2-bll/reducers/cards-reduser\";\r\n\r\ntype PropsType = {\r\n    value: number []\r\n    setValue: (value: number[]) => void\r\n}\r\n\r\nexport const Sidebar: React.FC<PropsType> = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const privatCardsTrue = () => {\r\n        dispatch(onChangePrivateAC(true))\r\n    }\r\n    const privatCardsFalse = () => {\r\n        dispatch(onChangePrivateAC(false))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid container direction={'column'} justifyContent={'center'}\r\n                  alignContent={'space-around'} style={{height: '500px'}}>\r\n                <Grid item xs>\r\n                    <Typography id=\"range-slider\" gutterBottom>Show packs cards</Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <ButtonGroup disableElevation color=\"primary\" aria-label=\"outlined primary button group\">\r\n                        <Button onClick={privatCardsTrue}>My</Button>\r\n                        <Button onClick={privatCardsFalse}>All</Button>\r\n\r\n                    </ButtonGroup>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <DoubleSlider value={props.value} setValue={props.setValue}/>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React, {useCallback, useEffect} from 'react';\r\nimport {createStyles, makeStyles, Theme, withStyles} from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    addCardPackTC,\r\n    CardPackType,\r\n    deleteCardPackTC,\r\n    getCardPacksTC,\r\n    updateCardPackTC\r\n} from \"../../../n1-main/m2-bll/reducers/packs-reducer\";\r\nimport {AppRootStateType} from \"../../../n1-main/m2-bll/store/redux-store\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {getCardsTC, setCurrentPackDataAC} from \"../../../n1-main/m2-bll/reducers/cards-reduser\";\r\n\r\nexport const StyledTableCell = withStyles((theme: Theme) =>\r\n    createStyles({\r\n        head: {\r\n            backgroundColor: theme.palette.common.black,\r\n            color: theme.palette.common.white,\r\n        },\r\n        body: {\r\n            fontSize: 14,\r\n        },\r\n    }),\r\n)(TableCell);\r\n\r\nexport const StyledTableRow = withStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            '&:nth-of-type(odd)': {\r\n                backgroundColor: theme.palette.action.hover,\r\n            },\r\n        },\r\n    }),\r\n)(TableRow);\r\n\r\nexport const useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n});\r\n\r\nexport default function PacksTable() {\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n    const cardPacks = useSelector<AppRootStateType, Array<CardPackType>>(state => state.packs.cardPacks);\r\n\r\n    const classes = useStyles();\r\n\r\n    const addPackHandler = useCallback(() => {\r\n        dispatch(addCardPackTC({name: \"-TestPackName-\"}))\r\n        // dispatch(getCardPacksTC({pageCount: 8}))\r\n    }, [])\r\n\r\n    const deletePackHandler = useCallback((e, id: string) => {\r\n        dispatch(deleteCardPackTC(id))\r\n        // dispatch(getCardPacksTC({pageCount: 8}))\r\n    }, [])\r\n\r\n    const updatePackHandler = useCallback((e, id: string) => {\r\n        dispatch(updateCardPackTC({_id: id, name: \"-UpdatedTestPackName-\"}))\r\n        // dispatch(getCardPacksTC({pageCount: 8}))\r\n    }, [])\r\n\r\n    const getCardsHandler = useCallback((e, id: string, name: string) => {\r\n\r\n        dispatch(setCurrentPackDataAC({id, name}))\r\n        dispatch(getCardsTC(id))\r\n    }, [])\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"customized table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <StyledTableCell>Name</StyledTableCell>\r\n                        <StyledTableCell align=\"right\">Cards</StyledTableCell>\r\n                        <StyledTableCell align=\"right\">Last Update</StyledTableCell>\r\n                        <StyledTableCell align=\"right\">Created by</StyledTableCell>\r\n                        <StyledTableCell align=\"right\">\r\n                            <Button variant=\"contained\" onClick={addPackHandler}>\r\n                                Add New Pack\r\n                            </Button>\r\n                        </StyledTableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {cardPacks.map((pack) => (\r\n                        <StyledTableRow key={pack.updated.toString()}>\r\n                            <StyledTableCell component=\"th\" scope=\"row\">\r\n                                <Link to='/cards-list' onClick={e => getCardsHandler(e, pack._id, pack.name)}>{pack.name}</Link>\r\n                            </StyledTableCell>\r\n                            <StyledTableCell align=\"right\">{pack.cardsCount}</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">{pack.updated.toString().slice(0, 10)}</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">{pack.user_name}</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">\r\n                                <Button onClick={e => deletePackHandler(e, pack._id)}>Delete</Button>\r\n                                <Button onClick={e => updatePackHandler(e, pack._id)}>Edit</Button>\r\n                            </StyledTableCell>\r\n                        </StyledTableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}","import React from \"react\";\r\nimport {IconButton, InputBase, Paper} from \"@material-ui/core\";\r\nimport style from './Search.module.css'\r\nimport {Search} from '@material-ui/icons'\r\n\r\nexport const SearchPacks = () => {\r\n    return <div>\r\n        <Paper component={'form'} className={style.root}>\r\n            <InputBase\r\n                className={style.input}\r\n                placeholder=\"Search…\"\r\n                inputProps={{'aria-label': 'search'}}\r\n            />\r\n            <IconButton type=\"submit\" className={style.iconButton} aria-label=\"search-icon\">\r\n                <Search/>\r\n            </IconButton>\r\n\r\n        </Paper>\r\n\r\n\r\n    </div>\r\n}","import React from \"react\";\r\nimport {SearchPacks} from \"./Search\";\r\n\r\n\r\nexport const SearchContainer = () => {\r\n    return <div>\r\n        <SearchPacks/>\r\n    </div>\r\n}","import React from 'react'\r\nimport {Pagination} from \"@material-ui/lab\";\r\n\r\n\r\nexport const PaginationPage = () => {\r\n return (\r\n     <div>\r\n         <Pagination count={10} color=\"primary\"/>\r\n     </div>\r\n )\r\n}","import React from 'react'\r\nimport {PaginationPage} from \"./Pagination\";\r\n\r\nexport const PaginationContainer = () => {\r\n    return <>\r\n        <PaginationPage/>\r\n    </>\r\n\r\n}","import React, {useEffect} from \"react\";\r\nimport {Container, Grid} from \"@material-ui/core\";\r\nimport {Sidebar} from \"./p4-sidebar/Sidebar\";\r\nimport PacksTable from \"./p3-tables/PacksTable\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../n1-main/m2-bll/store/redux-store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {getCardPacksTC} from \"../../n1-main/m2-bll/reducers/packs-reducer\";\r\nimport {SearchContainer} from \"./p1-search/SearchContainer\";\r\nimport {PaginationContainer} from \"./p2-pagination/PaginationContainer\";\r\n\r\nexport const PacksList: React.FC = () => {\r\n    const maxCardsCount = useSelector<AppRootStateType, number>(state => state.packs.maxCardsCount)\r\n    const minCardsCount = useSelector<AppRootStateType, number>(state => state.packs.minCardsCount)\r\n    const [value, setValue] = React.useState<number[]>([minCardsCount, maxCardsCount]);\r\n\r\n    const dispatch = useDispatch();\r\n    const privatCards = useSelector<AppRootStateType, { value: boolean }>(state => state.cards.privatCards)\r\n    useEffect(() => {\r\n        dispatch(getCardPacksTC(value))\r\n    }, [privatCards]);\r\n    console.log('value'+ value)\r\n    const packsTrue = useSelector<AppRootStateType, boolean>(state => state.cards.packsTrue)\r\n    if (!packsTrue) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return (\r\n        <Container>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                style={{height: \"92vh\"}}\r\n            >\r\n                <Grid item>\r\n                    <Sidebar value={value} setValue={setValue}/>\r\n                </Grid>\r\n                <Grid item>\r\n                    <SearchContainer/>\r\n                    <PacksTable/>\r\n                    <PaginationContainer/>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useCallback} from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../n1-main/m2-bll/store/redux-store\";\r\nimport {StyledTableCell, StyledTableRow, useStyles} from './PacksTable';\r\nimport {CardType} from \"../../../n1-main/m3-dal/api/cards-api\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {deleteCardsTC, postCardsTC, updateCardsTC} from \"../../../n1-main/m2-bll/reducers/cards-reduser\";\r\n\r\nexport default function CardsTable() {\r\n    const dispatch = useDispatch();\r\n    const cards = useSelector<AppRootStateType, Array<CardType>>(state => state.cards.cards);\r\n    const packIdForAdd = useSelector<AppRootStateType, string>(state => state.cards.currentPackData.id);\r\n\r\n    const classes = useStyles();\r\n\r\n    const addCardHandler = useCallback(() => {\r\n        dispatch(postCardsTC(packIdForAdd))\r\n    }, [])\r\n\r\n    const deleteCardHandler = useCallback((e, id: string, packId: string) => {\r\n        debugger\r\n        dispatch(deleteCardsTC(packId, id))\r\n    }, [])\r\n\r\n    const updateCardHandler = useCallback((e, id: string, packId: string) => {\r\n        dispatch(updateCardsTC(packId, id))\r\n    }, [])\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"customized table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <StyledTableCell>Question</StyledTableCell>\r\n                        <StyledTableCell align=\"right\">Answer</StyledTableCell>\r\n                        <StyledTableCell align=\"right\">Last Update</StyledTableCell>\r\n                        <StyledTableCell align=\"right\">Grade</StyledTableCell>\r\n                        <StyledTableCell align=\"right\">\r\n                            <Button variant=\"contained\" onClick={addCardHandler}>\r\n                                Add New Card\r\n                            </Button>\r\n                        </StyledTableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {cards.map((card) => (\r\n                        <StyledTableRow key={card.updated.toString()}>\r\n                            <StyledTableCell component=\"th\" scope=\"row\">{card.question}</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">{card.answer}</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">{card.updated.toString().slice(0, 10)}</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">{card.grade}</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">\r\n                                <Button onClick={e => deleteCardHandler(e, card._id, card.cardsPack_id)}>Delete</Button>\r\n                                <Button onClick={e => updateCardHandler(e, card._id, card.cardsPack_id)}>Edit</Button>\r\n                            </StyledTableCell>\r\n                        </StyledTableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}","import React, {useEffect} from \"react\";\r\nimport CardsTable from \"./p3-tables/CardsTable\";\r\nimport {Container, Grid, Icon} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../n1-main/m2-bll/store/redux-store\";\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport {SearchContainer} from \"./p1-search/SearchContainer\";\r\nimport {PaginationContainer} from \"./p2-pagination/PaginationContainer\";\r\n\r\nexport const CardsList: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const packName = useSelector<AppRootStateType, string>(state => state.cards.currentPackData.name);\r\n\r\n    const packsTrue = useSelector<AppRootStateType, boolean>(state => state.cards.packsTrue)\r\n    if (!packsTrue) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return (\r\n        <Container>\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                style={{height: \"92vh\"}}\r\n            >\r\n                <Link to='/packs-list'><ArrowBackIcon style={{ fontSize: 40 }}/></Link>\r\n                <h1>{packName}</h1>\r\n                <SearchContainer/>\r\n                <CardsTable/>\r\n                <PaginationContainer/>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Error404} from \"../../../n2-features/f0-test/t2-404/Error404\";\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport {PasswordRecovery} from \"../../../n2-features/f1-auth/a3-passwordRecovery/PasswordRecovery\";\r\nimport {NewPasswordContainer} from \"../../../n2-features/f1-auth/a4-enterPassword/NewPasswordContainer\";\r\nimport {Profile} from \"../../../n2-features/f1-auth/a5-profile/Profile\";\r\nimport {Test} from '../../../n2-features/f0-test/t1-test/test';\r\nimport {Main} from '../Main/Main';\r\nimport {RegistrationContainer} from \"../../../n2-features/f1-auth/a2-registration/RegistrationContainer\";\r\nimport {LoginContainer} from \"../../../n2-features/f1-auth/a1-loginization/LoginContainer\";\r\nimport {CheckOnEmail} from \"../../../n2-features/f1-auth/a3-passwordRecovery/CheckOnEmail\";\r\nimport {PacksList} from \"../../../n2-features/f2-packsList/PacksList\";\r\nimport {CardsList} from \"../../../n2-features/f2-packsList/CardsList\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-bll/store/redux-store\";\r\n\r\n\r\nexport const Routes = () => {\r\n    // const isInitialized = useSelector<AppRootStateType, boolean>(state => state.app.isInitialized)\r\n    // if (isInitialized) {\r\n    //     return <Redirect to={'/profile'}/>\r\n    // }\r\n    console.log('routes')\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\" strict render={() => <Main/>}/>\r\n            <Route path=\"/packs-list\" render={() => <PacksList/>}/>\r\n            <Route path=\"/cards-list\" render={() => <CardsList/>}/>\r\n            <Route path=\"/profile\" render={() => <Profile/>}/>\r\n            <Route path=\"/test\" render={() => <Test/>}/>\r\n            <Route path=\"/login\" render={() => <LoginContainer/>}/>\r\n            <Route path=\"/registration\" render={() => <RegistrationContainer/>}/>\r\n            <Route path=\"/password-recovery\" render={() => <PasswordRecovery/>}/>\r\n            <Route path=\"/set-new-password/:token?\" render={() => <NewPasswordContainer/>}/>\r\n            <Route path={\"/404\"} render={() => <Error404/>}/>\r\n            <Route path={\"/check-on-email\"} render={() => <CheckOnEmail/>}/>\r\n            <Redirect from=\"*\" to=\"/404\"/>\r\n        </Switch>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-bll/store/redux-store\";\r\nimport {setAppErrorAC} from \"../../m2-bll/reducers/app-reduser\";\r\n\r\n\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />\r\n}\r\n\r\nexport function ErrorSnackbar() {\r\n\r\n    const error = useSelector((state:AppRootStateType): string | null => state.app.error)\r\n    const dispatch = useDispatch()\r\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n        dispatch(setAppErrorAC(null))\r\n    }\r\n\r\n    return (\r\n        <Snackbar open={!!error} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"error\">\r\n                {error}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n\r\n","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {Header} from \"./Header/Header\";\r\nimport {Routes} from \"./Routes/Routes\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {initializeAppTC, RequestStatusType} from \"../m2-bll/reducers/app-reduser\";\r\nimport {ErrorSnackbar} from \"./ErrorSnackbar/ErrorSnackbar\";\r\nimport LinearProgress from '@material-ui/core/LinearProgress/LinearProgress';\r\nimport {AppRootStateType} from '../m2-bll/store/redux-store';\r\n\r\nexport const App = () => {\r\n    console.log('app')\r\n    const status = useSelector((state: AppRootStateType): RequestStatusType => state.app.status)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeAppTC())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <ErrorSnackbar/>\r\n            <Header/>\r\n            {status === \"loading\" && <LinearProgress color=\"secondary\"/>}\r\n            <Routes/>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from \"./n1-main/m2-bll/store/redux-store\";\r\nimport {Provider} from \"react-redux\";\r\nimport {App} from \"./n1-main/m1-ui/App\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App/>\r\n            </HashRouter>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"group\":\"SuperInputText_group__1nexz\",\"superInput\":\"SuperInputText_superInput__1yolB\",\"label\":\"SuperInputText_label__1j9Qj\",\"bar\":\"SuperInputText_bar__1T0AB\",\"highlight\":\"SuperInputText_highlight__fhtXc\",\"inputHighlighter\":\"SuperInputText_inputHighlighter__3BWEd\",\"error\":\"SuperInputText_error__1I2B9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__3M0qs\",\"formGroup\":\"Login_formGroup__J3ZX_\",\"loginBtn\":\"Login_loginBtn__140D6\",\"forgot\":\"Login_forgot___wDsh\",\"singUpQ\":\"Login_singUpQ__amvSV\",\"singUp\":\"Login_singUp__11Wg8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"SuperButton_btn__2BrdK\",\"red\":\"SuperButton_red__3ffHM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__ZfPjp\",\"checkbox\":\"SuperCheckbox_checkbox__gjXf_\",\"spanClassName\":\"SuperCheckbox_spanClassName__3xIyD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Search_root__29W9a\",\"input\":\"Search_input__3GqLS\",\"iconButton\":\"Search_iconButton__1AuVK\"};"],"sourceRoot":""}